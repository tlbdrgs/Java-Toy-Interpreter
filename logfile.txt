Id --> 1
ExeStack:
(Ref(int) a;;(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 20);
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 20);
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};}
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};}
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }))
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }))
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
a=1, int
v=20
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
2
20
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
a=1, int
v=40
Heap:
1 --> 20
LockTable:
Out:
0
1
2
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) a;;(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 20);
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 20);
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};}
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};}
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }))
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }))
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
a=1, int
v=20
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
LockTable:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
LockTable:
Out:
0
1
2
20
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
a=1, int
v=40
Heap:
1 --> 20
LockTable:
Out:
0
1
2
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(Ref(int) v2;;(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))))))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(Ref(int) v2;;(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(Ref(int) v2;;(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))))
SymbolTable:
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v2;;(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))))
SymbolTable:
v1=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v2;;(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))))
SymbolTable:
v1=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v2;
(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))))
SymbolTable:
v1=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v2;
(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))))
SymbolTable:
v1=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))))
SymbolTable:
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int x;;(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))))
SymbolTable:
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int x;
(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))
SymbolTable:
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int x;
(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))
SymbolTable:
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))
SymbolTable:
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int q;;(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))))
SymbolTable:
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int q;
(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))
SymbolTable:
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int q;
(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))
SymbolTable:
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))
SymbolTable:
q=0
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 20);;(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))))
SymbolTable:
q=0
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 20);
(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))
SymbolTable:
q=0
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 20);
(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))
SymbolTable:
q=0
x=0
v1=0, int
v2=0, int
Heap:
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=0, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v2, 30);;(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=0, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v2, 30);
(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=0, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v2, 30);
(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=0, int
Heap:
1 --> 20
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newLock(x);(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newLock(x)
(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newLock(x)
(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))
SymbolTable:
q=0
x=0
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};;(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};
(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))};
(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newLock(q);(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};;(lock(x);(wH(v1, rH(v1)*10);;unlock(x))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newLock(q)
(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};
(lock(x);(wH(v1, rH(v1)*10);;unlock(x)))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newLock(q)
(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))};
(lock(x);(wH(v1, rH(v1)*10);;unlock(x)))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(lock(x);(wH(v1, rH(v1)*10);;unlock(x)))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};;(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(lock(x);(wH(v1, rH(v1)*10);;unlock(x)))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(lock(x);(wH(v1, rH(v1)-1);;unlock(x)))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};
(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
lock(x)
(wH(v1, rH(v1)*10);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))};
(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
lock(x)
(wH(v1, rH(v1)*10);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};;(lock(q);(wH(v2, rH(v2)*10);;unlock(q))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};
(lock(q);(wH(v2, rH(v2)*10);;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))};
(lock(q);(wH(v2, rH(v2)*10);;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 20
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(lock(q);(wH(v2, rH(v2)*10);;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(lock(q);(wH(v2, rH(v2)*10);;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(lock(q);(wH(v2, rH(v2)+5);;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 2
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
lock(q)
(wH(v2, rH(v2)*10);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
lock(x)
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
lock(q)
(wH(v2, rH(v2)*10);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> -1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(wH(v2, rH(v2)*10);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)-1);;unlock(x))
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(wH(v2, rH(v2)*10);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)-1);
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
wH(v2, rH(v2)*10);
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)-1);
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
wH(v2, rH(v2)*10);
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 200
2 --> 30
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(;(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
unlock(x)
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
lock(q)
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> 3
2 --> 4
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
q=0
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:

(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(wH(v2, rH(v2)+5);;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
wH(v2, rH(v2)+5);
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(lock(x);(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
wH(v2, rH(v2)+5);
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 300
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
lock(x)
(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
lock(x)
(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 5
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v1));;(unlock(x);(lock(q);(print(rH(v2));;unlock(q)))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v1));
(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v1));
(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(unlock(x);(lock(q);(print(rH(v2));;unlock(q))))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
unlock(x)
(lock(q);(print(rH(v2));;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
unlock(x)
(lock(q);(print(rH(v2));;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> 1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(lock(q);(print(rH(v2));;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(lock(q);(print(rH(v2));;unlock(q)))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
lock(q)
(print(rH(v2));;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
lock(q)
(print(rH(v2));;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> -1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v2));;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v2));;unlock(q))
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v2));
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v2));
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 1
Out:
199
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 1
Out:
199
305
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
unlock(q)
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> 1
Out:
199
305
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
q=2
x=1
v1=1, int
v2=2, int
Heap:
1 --> 199
2 --> 305
LockTable:
1 --> -1
2 --> -1
Out:
199
305
FileTable:
-------------------------------------------------------------

